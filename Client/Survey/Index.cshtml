@model ADP.MG.Mamar.Web.Models.SurveyModel
@{
    Layout = null;
}
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Maqta Gateway | Mamar</title>
    <link rel='stylesheet' href='~/Scripts/libs/assets/formio/bootstrap.min.css' type="text/css" />
    <link rel='stylesheet' href=~/Scripts/libs/assets/formio/formio.full.min.css type="text/css" />
    <script src='~/Scripts/libs/assets/formio/formio.full.min.js' type="text/javascript"></script>
    <script src="~/Scripts/libs/assets/formio/survey-cust-component.min.js" type="text/javascript"></script>
    <link href="~/Scripts/libs/assets/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div id='formio'></div>
            </div>
        </div>
    </div>

    <script type='text/javascript'>
    //custom component rendering
    Formio.use({
        components: SurveyCustComponent.happinessSurveyComponents,
        templates: SurveyCustComponent.happinessSurveyTemplates
    });
    Formio.use({
        components: SurveyCustComponent.starRatingComponents,
        templates: SurveyCustComponent.starRatingTemplates
    });

        function initializePageScripts(Surveydata) {
            debugger;
        if (Surveydata) {
            renderSurveyForm(Surveydata);
        }

        // for render as individual iframe
        @*var fullUrl = @Model.BaseUrl + "odata/" + @Model.GetSurveyRelativeUrl;
        $.ajax({
            url: fullUrl,
            type: 'GET',
            dataType: 'json',
            success: function (result) {
                renderSurveyForm(result.data);
            },
            error: function (error) {
                console.log('Error: ' + error);
            },
            beforeSend: setHeader
        });

        function setHeader(xhr) {
            let appName = @Model.AppName;
            let appSecret =  @Model.AppSecret;
            let userName = @Model.UserName;
            xhr.setRequestHeader('AppName', appName);
            xhr.setRequestHeader('passkey', appSecret);
            xhr.setRequestHeader('UserName', userName);
        }*@
    }


        function renderSurveyForm(data) {
            Formio.createForm(document.getElementById('formio'), data, { breadcrumbSettings: { clickable: false }, buttonSettings: { showCancel: false }}).then(function (form) {
                if (document.getElementsByTagName('nav') && document.getElementsByTagName('nav').length > 0) {
                    document.getElementsByTagName('nav')[0].style.display = 'none'; //this is a temporary fix. this is one issue in formio
                }
                if (document.getElementsByClassName('btn-wizard-nav-cancel') && document.getElementsByClassName('btn-wizard-nav-cancel').length > 0) {
                    document.getElementsByClassName('btn-wizard-nav-cancel')[0].parentElement.style.display = 'none';//this is a temporary fix. this is one issue in formio
                }
                if (document.querySelector('[id^="error-list-"]') && document.querySelector('[id^="error-list-"]').id) {
                    document.querySelector('[id^="error-list-"]').id.style.display = 'none';
                }
               
            // Defaults are provided as follows. first Name and lasName are component key
            // please refer example json in this link ---> https://examples.form.io/example
            form.submission = {
                //data: {
                //    firstName: 'Joe',
                //    lastName: 'Smith'
                //}
            };

            // Register for the submit event to get the completed submission.
            form.on('submit', function (submission) {
                console.log('Submission was made!', submission);
                //send back data to parent frame
                let formioSubmitData = {
                    event: 'formioSubmit',
                    submissiondata: submission
                };
                let formioSubmitDataObj = JSON.stringify(formioSubmitData);
                window.top.postMessage(formioSubmitDataObj, "*");
                //window.top.postMessage(formioSubmitDataObj, location.origin);
            });

            // Everytime the form changes, this will fire.
            form.on('change', function (changed) {
                console.log('Form was changed', changed);
            });
        });
    }

        window.onmessage = function (e) {
            debugger;
        if (e.data) {
            let iframeMsgData = JSON.parse(e.data);
            if (iframeMsgData.event === "surveyData") {
                initializePageScripts(iframeMsgData.form);
            }
        }
    };
    //document.addEventListener('DOMContentLoaded', (event) => {
    //    initializePageScripts({ id: 101 });
    //});
       
    </script>
    <style>
        .hidden {
            display: none !important;
        }
    </style>
</body>
</html>


